---
kind: pipeline
type: kubernetes
name: callisto-ui-nginx

platform:
  os: linux
  arch: amd64

environment:
  VERSION: latest-20220916

trigger:
  event:
    exclude:
      - promote  

steps:
- name: lint_dockerfile
  pull: if-not-exists
  image: hadolint/hadolint:latest-alpine
  commands:
  - hadolint Dockerfile
  when:
    event:
    - push
    - pull_request    

- name: build_image
  pull: if-not-exists
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  environment:
    DOCKER_HOST: tcp://docker:2375
  commands:
  # wait for docker service to be up before running docker build
  - n=0; while [ "$n" -lt 60 ] && [ ! "$(docker stats --no-stream)" ]; do n=$(( n + 1 )); sleep 1; done
  - docker build -t docker-nginx-oss-s3-gateway:"$${VERSION}" .
  when:
    event:
    - push

- name: build_tag_push_ecr
  pull: if-not-exists
  image: plugins/ecr
  environment:
    AWS_REGION: eu-west-2
  settings:
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    repo: callisto/nginx-s3-gateway
    registry: 340268328991.dkr.ecr.eu-west-2.amazonaws.com
    tags:
    - latest
    - ${DRONE_TAG}
  when:
    event:
    - tag

services:
- name: docker
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  environment:
    DOCKER_TLS_CERTDIR: ""

---
kind: pipeline
type: kubernetes
name: callisto-ui-nginx-deploy

platform:
  os: linux
  arch: amd64

trigger:
  event:
    exclude:
      - promote

deploy: &deploy
  image: pelotech/drone-helm3
  settings:
    mode: upgrade
    chart: ./helm
    release: callisto-ui-nginx
    kube_certificate:
      from_secret: notprod_kube_certificate
    kube_api_server:
      from_secret: notprod_kube_api_url

steps:
  - name: lint helm files
    image: pelotech/drone-helm3
    settings:
      mode: lint
      chart: ./helm
      values_files: 
        - ./helm/values/dev-values.yaml
        - ./helm/values/test-values.yaml
        - ./helm/values/prod-values.yaml

  - name: deploy to dev
    <<: *deploy
    settings:
      values_files: 
        - ./helm/values/dev-values.yaml
      namespace: callisto-dev
      kube_token:
        from_secret: dev_kube_token
    when:
      event: 
        - push
      branch: 
        - main

  - name: check dev up
    pull: if-not-exists        
    image: &alpine_curl_image alpine/curl:3.14
    commands: 
    - chmod +x ./scripts/is-url-up.sh
    - ./scripts/is-url-up.sh https://web.dev.callisto-notprod.homeoffice.gov.uk/health
    when:
      event: 
        - push
      branch: 
        - main
    depends_on:      
      - deploy to dev        

  - name: deploy to test
    <<: *deploy
    settings:
      values_files: 
        - ./helm/values/test-values.yaml
      namespace: callisto-test
      kube_token:
        from_secret: test_kube_token
    when:
      event: 
        - push
      branch: 
        - main
    depends_on:
      - check dev up

  - name: check test up
    pull: if-not-exists        
    image: *alpine_curl_image
    commands:    
    - ./scripts/is-url-up.sh https://web.test.callisto-notprod.homeoffice.gov.uk/health
    when:
      event: 
        - push
      branch: 
        - main
    depends_on:      
      - deploy to test      


---
kind: pipeline
type: kubernetes
name: callisto-ui-nginx-promotion-checks

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - promote

steps:
  - name: environment-check
    pull: if-not-exists
    image: alpine:latest
    commands:
      - echo Cannot promote to a non prod environment
      - exit 1
    when:
      target:
        exclude:
          - production

  - name: successful build check
    pull: if-not-exists    
    image: drone/cli:1.6.2-alpine
    DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
    DRONE_TOKEN:
      from_secret: drone_token        
    commands:
    - |        
      PAGE=1
      SUCCESSFUL_BUILDS=''
      echo buildno $DRONE_BUILD_PARENT

      while [ "$PAGE" -le 10 ]; do 
        SUCCESSFUL_BUILDS="$(drone build ls --format '{{.Number}}' $DRONE_REPO --branch main --status success --event push --limit 100 --page $PAGE)"
        echo successful builds: $SUCCESSFUL_BUILDS  
        echo page: $PAGE

        if [ `echo $SUCCESSFUL_BUILDS | grep -c $DRONE_BUILD_PARENT ` -gt 0 ]; then
          echo 'Found match.'
          exit 0
        fi 
        PAGE="$((PAGE+1))"
      done

      echo 'NO match.'
      exit 1

---
kind: pipeline
type: kubernetes
name: callisto-ui-nginx-production-deploy

platform:
  os: linux
  arch: amd64

trigger:
  event:
    - promote

depends_on:
  - callisto-ui-nginx-promotion-checks

steps:
  - name: deploy to prod
    image: pelotech/drone-helm3
    settings:
      namespace: callisto-prod
      values_files: 
        - ./helm/values/prod-values.yaml
      mode: upgrade
      chart: ./helm
      release: callisto-ui-nginx
      kube_certificate:
        from_secret: prod_kube_certificate
      kube_api_server:
        from_secret: prod_kube_api_url
      kube_token:
        from_secret: prod_kube_token

  - name: check prod up
    pull: if-not-exists        
    image: alpine/curl:3.14
    commands:    
    - ./scripts/is-url-up.sh https://web.callisto.homeoffice.gov.uk/health
    depends_on:      
      - deploy to prod  

---
kind: pipeline
type: kubernetes
name: callisto-ui-nginx-notifications

trigger:
  status:
    - success
    - failure

depends_on:
  - callisto-ui-nginx
  - callisto-ui-nginx-deploy  

slack: &slack
  image: plugins/slack
  settings:
    webhook:
      from_secret: SLACK_WEBHOOK_URL
    channel: callisto-tech-notifications
    username: Drone
  
steps:  
  - name: slack_build
    <<: *slack
    settings:
      template: |
        {{#success build.status}}
          Build #{{ build.number }} succeeded{{#equal build.branch "main"}} and deployed to Dev and Test{{/equal}}! :tada:
        {{else}}
          Build #{{ build.number }} failed :alert:
        {{/success}}
        Commit: <${DRONE_REPO_LINK}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}> - {{{ trim build.message }}}
        Repo: {{ repo.name }}
        Branch: <${DRONE_REPO_LINK}/commits/{{ build.branch }}|{{ build.branch }}>
        Author: {{ build.author }}
        {{build.link}}       
    when:
      event: 
        - push

  - name: slack_deploy
    <<: *slack
    settings:
      template: >
        {{#success build.status}}
          :rocket: Successful *{{uppercasefirst build.deployTo}}* deployment for *{{repo.name}} build #{{build.number}}*.          
        {{else}}
          :zombie: *{{uppercasefirst build.deployTo}}* deployment failed for *{{repo.name}}* <${DRONE_BUILD_LINK}| build #{{build.number}}>.          
        {{/success}}       
    when:
      event:
        - promote        