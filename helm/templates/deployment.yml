---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      securityContext: 
        runAsUser: 1001      
        runAsGroup: 1001
      volumes:
        - name: nginx-templates
          configMap:
            name: default-conf
        - name: nginx-conf
          configMap:
            name: default-conf            
      containers:
        - name: nginx-s3proxy
          image: {{ .Values.image.repo }}{{ .Values.image.name }}:{{ .Values.image.version }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nginx-templates  # matches volume name: in this file
              mountPath: /etc/nginx/templates/default.conf.template
              subPath: default.conf.template
            - name: nginx-conf  # matches volume name: in this file
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          env:
            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.s3secretRef }}
                  key: s3_bucket_name
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.s3secretRef }}
                  key: iam_access_key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.s3secretRef }}
                  key: iam_access_secret
            - name: S3_SERVER
              value: {{ .Values.nginxs3proxy.s3server }}
            - name: S3_SERVER_PORT
              value: "{{ .Values.nginxs3proxy.s3serverPort }}"
            - name: S3_SERVER_PROTO
              value: {{ .Values.nginxs3proxy.s3serverProto }}
            - name: S3_REGION
              value: {{ .Values.nginxs3proxy.s3region }}
            - name: S3_STYLE
              value: {{ .Values.nginxs3proxy.s3style }}
            - name: S3_DEBUG
              value: "{{ .Values.nginxs3proxy.s3debug }}"
            - name: AWS_SIGS_VERSION
              value: "{{ .Values.nginxs3proxy.awsSigsVersion }}"
            - name: ALLOW_DIRECTORY_LIST
              value: "{{ .Values.nginxs3proxy.allowDirectoryList }}"
            - name: PROXY_CACHE_VALID_OK
              value: {{ .Values.nginxs3proxy.proxyCacheValidOk }}
            - name: PROXY_CACHE_VALID_NOTFOUND
              value: {{ .Values.nginxs3proxy.proxyCacheValidNotFound }}
            - name: PROXY_CACHE_VALID_FORBIDDEN
              value: {{ .Values.nginxs3proxy.proxyCacheValidForbidden }}
            - name: PROVIDE_INDEX_PAGE
              value: "{{ .Values.nginxs3proxy.provideIndexPage }}"
            - name: APPEND_SLASH_FOR_POSSIBLE_DIRECTORY
              value: "{{ .Values.nginxs3proxy.appendSlashForPossibleDirectory }}"
            - name: S3_ENV_DEFAULT
              value: ""
          resources:
            requests:
              memory: '512Mi'
              cpu: '500m'
            limits:
              memory: '1Gi'
              cpu: '1500m'
          ports:
            - name: http
              containerPort: 80
